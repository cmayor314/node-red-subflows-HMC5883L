[{"id":"3fe799fe.c01866","type":"subflow","name":"Get Current Operational Mode Status  HMC5883L","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"da3befc1.25c41"}]}],"out":[{"x":820,"y":80,"wires":[{"id":"b8297bc5.47d688","port":0}]}],"env":[],"color":"#E9967A","icon":"node-red/watch.svg"},{"id":"da3befc1.25c41","type":"function","z":"3fe799fe.c01866","name":"read mode","func":"return {command:\"02\"};","outputs":1,"noerr":0,"x":190,"y":80,"wires":[["f01002ac.0ff"]],"outputLabels":["get ID1"]},{"id":"f01002ac.0ff","type":"i2c in","z":"3fe799fe.c01866","name":"HMC5883L command","address":"30","command":"","count":"1","x":410,"y":80,"wires":[["b8297bc5.47d688"]]},{"id":"b8297bc5.47d688","type":"function","z":"3fe799fe.c01866","name":"interpret mode","func":"var mystring = \"\";\nswitch (0x03 & msg.payload)\n{\n    case 0x00: mystring = \"Continuous-Measurement Mode\"; break;\n    case 0x01: mystring = \"Single-Measurement Mode (Default)\"; break;\n    case 0x02: mystring = \"Idle Mode (0b10)\"; break;\n    case 0x03: mystring = \"Idle Mode (0b11)\"; break;\n        default: mystring = \"Mystery/Broken Device Mode\"\n}\nmsg.Mode = mystring;\nnode.status({text:\"Mode: \"+mystring});\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":80,"wires":[[]]}]
